#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
#set -o xtrace

function usage()
{
	if [ -n "${1+x}" ]; then
	        echo $1
	        echo
	fi

	echo "usage: $0 <[--dns-udp] [--dns-tcp]> <[--ipv4] [--ipv6]> [--dnssec] [--rdds43] [--rdds80] [--rdap] [--min <n>] [--minns <n>] [--max <n>]"
	exit 1
}

. config

if [[ "$0" = *"-update"* || "$0" = *"-disable"* || "$0" = *"-delete"* ]]; then
	declare dnsudp=false
	declare dnstcp=false
	declare ipv4=false
	declare ipv6=false
	declare dnssec=false
	declare rdds43=false
	declare rdds80=false
	declare rdap=false
	declare -i minns=2

	declare -i min=1
	declare max=

	while [ -n "${1+x}" ]; do
		case "$1" in
			--dns-udp)
				dnsudp=true
				;;
			--dns-tcp)
				dnstcp=true
				;;
			--ipv4)
				ipv4=true
				;;
			--ipv6)
				ipv6=true
				;;
			--dnssec)
				dnssec=true
				;;
			--rdds43)
				rdds43=true
				;;
			--rdds80)
				rdds80=true
			        ;;
			--rdap)
				rdap=true
				;;
			--minns)
				shift
				minns=$1
				;;
			--min)
				shift
				min=$1
				;;
			--max)
				shift
				max=$1
				;;
			*)
				usage "unknown option: \"$1\""
				;;
		esac
		shift
	done

	if [ -z "$max" ]; then
		max=$min
	fi

	if [ $max -lt $min ]; then
		usage "max ($max) cannot be less than min ($min)"
	fi

	if [[ "$0" != *"probe-"* ]] && [[ "$0" = *"-update"* ]]; then
		if [[ $dnsudp = "false" ]] && [[ $dnstcp = "false" ]]; then
			usage "at least one of \"--dns-udp\" and \"--dns-tcp\" must be specified"
		fi

		if [[ $ipv4 = "false" ]] && [[ $ipv6 = "false" ]]; then
			usage "at least one of \"--ipv4\" and \"--ipv6\" must be specified"
		fi
	fi
fi

function generate_url()
{
	declare -r OBJECT_TYPE="${1}"
	declare -r OBJECT_ID="${2:-}"

	declare url

	if [[ $USE_FORWARDER -ne 0 ]]; then
		url="${FORWARDER_URL}/${OBJECT_TYPE}${OBJECT_ID:+/$OBJECT_ID}"
	else
		declare -rA ACTIONS=(
			["tlds"]="rsm.provisioningapi.tld"
			["registrars"]="rsm.provisioningapi.registrar"
			["probeNodes"]="rsm.provisioningapi.probe"
		)
		url="${FRONTEND_URL}/zabbix.php?action=${ACTIONS[$OBJECT_TYPE]}${OBJECT_ID:+&id=$OBJECT_ID}"
	fi

	echo "$url"
}

function provisioning_api()
{
	declare -r USER="provisioning-api-${1,,}"
	declare -r REQUEST="${2^^}"
	declare -r OBJECT_TYPE="${3}"
	declare -r OBJECT_ID="${4:-}"
	declare    JSON="${5:-}"

	declare -r URL="$(generate_url $OBJECT_TYPE $OBJECT_ID)"

	declare -r LINE="$(printf "=%.0s" {1..120})"

	echo "${LINE}"
	echo "${REQUEST} ${URL}"
	echo "${LINE}"

	if [[ -n "${JSON}" ]]; then
		if [[ $USE_FORWARDER -eq 0 ]]; then
			JSON="${JSON/$',\n    "centralServer": 1'/''}"
		fi

		JSON="$(sed '/^\s*#/d' <<< $JSON)"

		echo "${JSON}"
		echo "${LINE}"
	fi

	curl                                         \
		--no-buffer                          \
		--include                            \
		--styled-output                      \
		--header 'Expect:'                   \
		--basic                              \
		--user "${USER}:password"            \
		--request "${REQUEST}"               \
		${JSON:+"--data"} ${JSON:+"${JSON}"} \
		"${URL}"
	echo
	echo "${LINE}"
}
