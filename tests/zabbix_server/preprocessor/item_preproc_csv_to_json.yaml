---
test case: 'empty parameters'
in:
  csv: ''
  params: ''
out:
  result: ''
  return: 'FAIL'
---
test case: 'empty input #1'
in:
  csv: ''
  params: ",\n\n1"
out:
  result: '[]'
  return: 'SUCCEED'
---
test case: 'empty input #2'
in:
  csv: ''
  params: ",\n\n0"
out:
  result: '[]'
  return: 'SUCCEED'
---
test case: 'single char input #1'
in:
  csv: 'A'
  params: ",\n\n1"
out:
  result: '[]'
  return: 'SUCCEED'
---
test case: 'single char input #2'
in:
  csv: 'A'
  params: ",\n\n0"
out:
  result: '[{"1":"A"}]'
  return: 'SUCCEED'
---
test case: 'empty line input #1'
in:
  csv: "\n"
  params: ",\n\n1"
out:
  result: '[{"":""}]'
  return: 'SUCCEED'
---
test case: 'empty line input #2'
in:
  csv: "\n"
  params: ",\n\n0"
out:
  result: '[{},{}]'
  return: 'SUCCEED'
---
test case: 'multiple empty lines input #1'
in:
  csv: "\n\n"
  params: ",\n\n1"
out:
  result: '[{"":""},{"":""}]'
  return: 'SUCCEED'
---
test case: 'multiple empty lines input #2'
in:
  csv: "\n\n"
  params: ",\n\n0"
out:
  result: '[{},{},{}]'
  return: 'SUCCEED'
---
test case: 'csv input with header line'
in:
  csv: |
      nr,name,addr
      1,abc,xyz
      2,cba,zyx
  params: "\n\n1"
out:
  result: '[{"nr":"1","name":"abc","addr":"xyz"},{"nr":"2","name":"cba","addr":"zyx"},{"nr":"","name":"","addr":""}]'
  return: 'SUCCEED'
---
test case: 'csv input without header line'
in:
  csv: |
      nr,name,addr
      1,abc,xyz
      2,cba,zyx
  params: "\n\n0"
out:
  result: '[{"1":"nr","2":"name","3":"addr"},{"1":"1","2":"abc","3":"xyz"},{"1":"2","2":"cba","3":"zyx"},{}]'
  return: 'SUCCEED'
---
test case: 'CSV wihtout trailing new line'
in:
  csv: "nr,\"name\",addr\n\"1\",abc,xyz\n\"2\",\"cba\",\"zyx\"\n"
  params: "\n\"\n1"
out:
  result: '[{"nr":"1","name":"abc","addr":"xyz"},{"nr":"2","name":"cba","addr":"zyx"},{"nr":"","name":"","addr":""}]'
  return: 'SUCCEED'
---
test case: 'CSV with header line only'
in:
  csv: 'nr,name,addr'
  params: "\n\n1"
out:
  result: '[]'
  return: 'SUCCEED'
---
test case: 'one line CSV'
in:
  csv: 'nr,name,addr'
  params: "\n\n0"
out:
  result: '[{"1":"nr","2":"name","3":"addr"}]'
  return: 'SUCCEED'
---
test case: 'multi-byte UTF-8 delimiter'
in:
  csv: |
      nrыnameыaddr
      1ыabcыxyz
      2ыcbaыzyx
  params: "ы\n\n1"
out:
  result: '[{"nr":"1","name":"abc","addr":"xyz"},{"nr":"2","name":"cba","addr":"zyx"},{"nr":"","name":"","addr":""}]'
  return: 'SUCCEED'
---
test case: 'multi-byte UTF-8 quotation character'
in:
  csv: |
      nr,ыnameы,addr
      1,abc,ыxyzы
      ы2ы,ыcbaы,ыzyxы
  params: "\nы\n1"
out:
  result: '[{"nr":"1","name":"abc","addr":"xyz"},{"nr":"2","name":"cba","addr":"zyx"},{"nr":"","name":"","addr":""}]'
  return: 'SUCCEED'
---
test case: 'multi-byte UTF-8 delimiter and quotation characters'
in:
  csv: |
      nrфыnameыфaddr
      1фabcфыxyzы
      ы2ыфыфcbaфыфыzyфxы
  params: "ф\nы\n1"
out:
  result: '[{"nr":"1","name":"abc","addr":"xyz"},{"nr":"2","name":"фcbaф","addr":"zyфx"},{"nr":"","name":"","addr":""}]'
  return: 'SUCCEED'
---
test case: 'single column CSV input #1'
in:
  csv: |
      nr
      1
      2
  params: "\n\n1"
out:
  result: '[{"nr":"1"},{"nr":"2"},{"nr":""}]'
  return: 'SUCCEED'
---
test case: 'single column CSV input #2'
in:
  csv: |
      nr
      1
      2
  params: "\n\n0"
out:
  result: '[{"1":"nr"},{"1":"1"},{"1":"2"},{}]'
  return: 'SUCCEED'
---
test case: 'less fields in one row #1'
in:
  csv: |
      nr,name,addr
      1,abc,xyz
      2,cba
      3,def,fed
  params: "\n\n0"
out:
  result: '[{"1":"nr","2":"name","3":"addr"},{"1":"1","2":"abc","3":"xyz"},{"1":"2","2":"cba"},{"1":"3","2":"def","3":"fed"},{}]'
  return: 'SUCCEED'
---
test case: 'less fields in one row #2'
in:
  csv: |
      nr,name,addr
      1,abc,xyz
      2,cba
      3,def,fed
  params: "\n\n1"
out:
  result: '[{"nr":"1","name":"abc","addr":"xyz"},{"nr":"2","name":"cba","addr":""},{"nr":"3","name":"def","addr":"fed"},{"nr":"","name":"","addr":""}]'
  return: 'SUCCEED'
---
test case: 'more fields in one row #1'
in:
  csv: |
      nr,name,addr
      1,abc,xyz
      2,cba,zyx,extra
      3,def,fed
  params: "\n\n0"
out:
  result: '[{"1":"nr","2":"name","3":"addr"},{"1":"1","2":"abc","3":"xyz"},{"1":"2","2":"cba","3":"zyx","4":"extra"},{"1":"3","2":"def","3":"fed"},{}]'
  return: 'SUCCEED'
---
test case: 'more fields in one row #2'
in:
  csv: |
      nr,name,addr
      1,abc,xyz
      2,cba,zyx,extra
      3,def,fed
  params: "\n\n1"
out:
  result: ''
  return: 'FAIL'
---
test case: 'quoted fields'
in:
  csv: |
      nr,|name, surname|,addr
      |1|,ab|c|,|x||y,z|
      2,|||cba|||,|||zyx|||
  params: "\n|\n1"
out:
  result: '[{"nr":"1","name, surname":"ab|c|","addr":"x|y,z"},{"nr":"2","name, surname":"|cba|","addr":"|zyx|"},{"nr":"","name, surname":"","addr":""}]'
  return: 'SUCCEED'
---
test case: 'empty fields #1'
in:
  csv: |
      ,,
      ,,
  params: "\n\n1"
out:
  result: ''
  return: 'FAIL'
---
test case: 'empty fields #2'
in:
  csv: |
      ,,
      ,,
  params: "\n\n0"
out:
  result: '[{"1":"","2":"","3":""},{"1":"","2":"","3":""},{}]'
  return: 'SUCCEED'
---
test case: 'empty fields #3'
in:
  csv: |
      ||,||,||
      ||,||,||
  params: "\n|\n0"
out:
  result: '[{"1":"","2":"","3":""},{"1":"","2":"","3":""},{}]'
  return: 'SUCCEED'
---
test case: 'duplicated column names'
in:
  csv: |
      nr,name,name
      1,abc,xyz
      2,cba,zyx
  params: "\n\n1"
out:
  result: ''
  return: 'FAIL'
---
test case: 'unclosed quoted field #1'
in:
  csv: |
      nr,name,addr
      1,|abc,xyz
      2,cba,zyx
  params: "\n|\n1"
out:
  result: ''
  return: 'FAIL'
---
test case: 'unclosed quoted field #2'
in:
  csv: |
      nr,name,addr
      1,|abc| ,xyz
      2,cba,zyx
  params: "\n|\n1"
out:
  result: ''
  return: 'FAIL'
---
test case: 'CSV with sep line #1'
in:
  csv: |
      Sep=.
      nr.name.addr
      1.abc.xyz
      2.cba.zyx
  params: "\n\n1"
out:
  result: '[{"nr":"1","name":"abc","addr":"xyz"},{"nr":"2","name":"cba","addr":"zyx"},{"nr":"","name":"","addr":""}]'
  return: 'SUCCEED'
---
test case: 'CSV with sep line #2'
in:
  csv: |
      Sep=.
      nr.name.addr
      1.abc.xyz
      2.cba.zyx
  params: "\n\n0"
out:
  result: '[{"1":"nr","2":"name","3":"addr"},{"1":"1","2":"abc","3":"xyz"},{"1":"2","2":"cba","3":"zyx"},{}]'
  return: 'SUCCEED'
---
test case: 'CSV with unsupported sep line #1'
in:
  csv: |
      Sep=..
      nr.name.addr
      1.abc.xyz
      2.cba.zyx
  params: "\n\n1"
out:
  result: '[{"Sep=..":"nr.name.addr"},{"Sep=..":"1.abc.xyz"},{"Sep=..":"2.cba.zyx"},{"Sep=..":""}]'
  return: 'SUCCEED'
---
test case: 'CSV with unsupported sep line #2'
in:
  csv: |
      sep=символы
      1,2,3,4,5,6
  params: "\n\n0"
out:
  result: '[{"1":"sep=символы"},{"1":"1","2":"2","3":"3","4":"4","5":"5","6":"6"},{}]'
  return: 'SUCCEED'
---
test case: 'CSV with sep line #3'
in:
  csv: |
      Sep=!
      nr.name.addr
      1.abc.xyz
      2.cba.zyx
  params: ".\n\n1"
out:
  result: '[{"nr":"1","name":"abc","addr":"xyz"},{"nr":"2","name":"cba","addr":"zyx"},{"nr":"","name":"","addr":""}]'
  return: 'SUCCEED'
---
test case: 'CSV with sep line only #1'
in:
  csv: 'Sep=.'
  params: "\n\n1"
out:
  result: '[]'
  return: 'SUCCEED'
---
test case: 'CSV with sep line only #2'
in:
  csv: 'Sep=.'
  params: "\n\n0"
out:
  result: '[]'
  return: 'SUCCEED'
---
test case: 'CSV with unsupported sep line only #1'
in:
  csv: 'Sep=..'
  params: "\n\n1"
out:
  result: '[]'
  return: 'SUCCEED'
---
test case: 'CSV with unsupported sep line only #2'
in:
  csv: 'Sep=..'
  params: "\n\n0"
out:
  result: '[{"1":"Sep=.."}]'
  return: 'SUCCEED'
---
test case: 'cr/nl line endings'
in:
  csv: "Sep=.\r\nname.addr\r\nabc.xyz\r\n"
  params: "\n\n1"
out:
  result: '[{"name":"abc","addr":"xyz"},{"name":"","addr":""}]'
  return: 'SUCCEED'
...
